colnames(dc_only_blastp) <- colnames(blastp)
for (i in dc_only) {
colnames(dc_only_blastp) <- colnames(blastp)
t <- paste(i, ".", sep="")
s <- subset(blastp, grepl(t, blastp$prot_id, fixed=TRUE))
dc_only_blastp <- rbind(dc_only_blastp, s)
}
# Write out annotation summary for tissue-specific genes to file
write.table(dc_only_blastp, paste0("gene_annotations/", outputPrefix, "-DC-blastp-hits.txt"), quote=FALSE, row.names = FALSE, sep="\t")
### Oral Tentacle Only ###
## Interpro Scan annotations ##
# Pull out annotations into separate data frame
ot_only_annot <- data.frame(matrix(ncol = ncol(annot_edit), nrow = 0))
for (i in ot_only) {
colnames(ot_only_annot) <- colnames(annot_edit)
t <- paste(i, ".", sep="")
s <- subset(annot_edit, grepl(t, annot_edit$prot_id, fixed=TRUE))
ot_only_annot <- rbind(ot_only_annot, s)
}
# Sort annotations by number of times present
ot_label_summary <- sort(summary(ot_only_annot$label), decreasing=TRUE)
ot_label_summary <- ot_label_summary[!ot_label_summary %in% 0]
# Write out list of annotations to files
write.table(ot_only_annot, paste0("gene_annotations/", outputPrefix, "-OT-only-annotations.txt"), quote=FALSE, row.names = FALSE, sep="\t")
write.table(ot_label_summary, paste0("gene_annotations/", outputPrefix, "-OT-label-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
ot_label_summary
ot_only_annot
dc_only_blastp
ot_label_summary
?write.table
class(ot_label_summary)
ot_label_summary <- as.data.frame(ot_label_summary[!ot_label_summary %in% 0])
ot_label_summary <- as.matrix(ot_label_summary[!ot_label_summary %in% 0])
# Sort annotations by number of times present
ot_label_summary <- sort(summary(ot_only_annot$label), decreasing=TRUE)
ot_label_summary
length(as.matrix()
length(ot_label_summary)
nrow(ot_label_summary)
ot_label_summary <- as.matrix(ot_label_summary[!ot_label_summary %in% 0])
nrow(ot_label_summary)
length(ot_label_summary)
# Sort annotations by number of times present
ot_label_summary <- sort(summary(ot_only_annot$label), decreasing=TRUE)
ot_label_summary <- ot_label_summary[!ot_label_summary %in% 0]
nrow(ot_label_summary)
ot_only_annot
nrow(ot_only_annot)
nrow(ot_label_summary)!=NULL
nrow(ot_label_summary)==NULL
nrow(ot_label_summary) %is% NULL
!is.null(nrow(ot_label_summary))
is.null(nrow(ot_label_summary))
nrow(ot_only_annot)>0
dc_only_blastp
dc_goterm_summary
# Sort go terms by number of times present
dc_goterm_summary <- sort(summary(dc_only_annot$go_term), decreasing=TRUE)
dc_goterm_summary
head(dc_goterm_summary)
class(dc_goterm_summary)
# Sort go terms by number of times present
dc_goterm_summary <- sort(summary(dc_only_annot$go_term), decreasing=TRUE)
dc_goterm_summary <- dc_goterm_summary[!dc_goterm_summary %in% 0]
class(dc_goterm_summary)
dc_goterm_summary <- as.table(dc_goterm_summary[!dc_goterm_summary %in% 0])
class(dc_goterm_summary)
nrow(dc_goterm_summary)
dc_goterm_summary
# Sort go terms by number of times present
dc_goterm_summary <- as.table(sort(summary(dc_only_annot$go_term), decreasing=TRUE))
dc_goterm_summary
dc_goterm_summary <- dc_goterm_summary[!dc_goterm_summary %in% 0]
class(dc_goterm_summary)
nrow(dc_goterm_summary)
# Sort go terms by number of times present
dc_goterm_summary <- sort(summary(dc_only_annot$go_term), decreasing=TRUE)
dc_goterm_summary <- dc_goterm_summary[!dc_goterm_summary %in% 0]
nrow(dc_goterm_summary)
nrow(as.table(dc_goterm_summary))>1
head(dc_only_acc)
nrow(dc_only_acc)
nrow(ot_goterm_summary)>0
# Pull out annotation data for tissue-specific Berghia genes
### Distal Ceras Only ###
## Interpro Scan annotations ##
# Pull out annotations into separate data frame
dc_only_annot <- data.frame(matrix(ncol = ncol(annot_edit), nrow = 0))
for (i in dc_only) {
colnames(dc_only_annot) <- colnames(annot_edit)
t <- paste(i, ".", sep="")
s <- subset(annot_edit, grepl(t, annot_edit$prot_id, fixed=TRUE))
dc_only_annot <- rbind(dc_only_annot, s)
}
# Sort annotations by number of times present
dc_label_summary <- sort(summary(dc_only_annot$label), decreasing=TRUE)
dc_label_summary <- dc_label_summary[!dc_label_summary %in% 0]
# Write out list of annotations to files
if (nrow(dc_only_annot)>0) {
write.table(dc_only_annot, paste0("gene_annotations/", outputPrefix, "-DC-only-annotations.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
if (!is.null(nrow(dc_label_summary))) {
write.table(dc_label_summary, paste0("gene_annotations/", outputPrefix, "-DC-label-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
# Sort go terms by number of times present
dc_goterm_summary <- sort(summary(dc_only_annot$go_term), decreasing=TRUE)
dc_goterm_summary <- dc_goterm_summary[!dc_goterm_summary %in% 0]
# Write out list of go terms to file
if (nrow(as.table(dc_goterm_summary))>1) {
write.table(dc_goterm_summary, paste0("gene_annotations/", outputPrefix, "-DC-goterms-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
## Annotation accessions for different interproscan databases ##
# Pull out annotations into separate data frame
dc_only_acc <- data.frame("protein_id"=character(0), "GO"=character(0), "IPR"=character(0),
"SignalP_EUK"=character(0), "Pfam"=character(0), stringsAsFactors = FALSE)
for (i in dc_only) {
t <- paste(i, ".", sep="")
s <- subset(annot_db, grepl(t, annot_db$protein_id, fixed=TRUE))
if(nrow(s)==0)
s <- data.frame("protein_id"=i, "GO"="None", "IPR"="None",
"SignalP_EUK"="None", "Pfam"="None", stringsAsFactors = FALSE)
dc_only_acc <- rbind(dc_only_acc, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(dc_only_acc)>0) {
write.table(dc_only_acc, paste0("gene_annotations/", outputPrefix, "-DC-accessions-summary.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
## BLASTP annotations ##
# Pull out annotations into separate data frame
dc_only_blastp <- data.frame(matrix(ncol = ncol(blastp), nrow = 0))
colnames(dc_only_blastp) <- colnames(blastp)
for (i in dc_only) {
colnames(dc_only_blastp) <- colnames(blastp)
t <- paste(i, ".", sep="")
s <- subset(blastp, grepl(t, blastp$prot_id, fixed=TRUE))
dc_only_blastp <- rbind(dc_only_blastp, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(dc_only_blastp)>0) {
write.table(dc_only_blastp, paste0("gene_annotations/", outputPrefix, "-DC-blastp-hits.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
### Oral Tentacle Only ###
## Interpro Scan annotations ##
# Pull out annotations into separate data frame
ot_only_annot <- data.frame(matrix(ncol = ncol(annot_edit), nrow = 0))
for (i in ot_only) {
colnames(ot_only_annot) <- colnames(annot_edit)
t <- paste(i, ".", sep="")
s <- subset(annot_edit, grepl(t, annot_edit$prot_id, fixed=TRUE))
ot_only_annot <- rbind(ot_only_annot, s)
}
# Sort annotations by number of times present
ot_label_summary <- sort(summary(ot_only_annot$label), decreasing=TRUE)
ot_label_summary <- ot_label_summary[!ot_label_summary %in% 0]
# Write out list of annotations to files
if (nrow(ot_only_annot)>0) {
write.table(ot_only_annot, paste0("gene_annotations/", outputPrefix, "-OT-only-annotations.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
if (!is.null(nrow(ot_label_summary))) {
write.table(ot_label_summary, paste0("gene_annotations/", outputPrefix, "-OT-label-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
# Sort go terms by number of times present
ot_goterm_summary <- sort(summary(ot_only_annot$go_term), decreasing=TRUE)
ot_goterm_summary <- ot_goterm_summary[!ot_goterm_summary %in% 0]
# Write out list of go terms to file
if (nrow(ot_goterm_summary)>0) {
write.table(ot_goterm_summary, paste0("gene_annotations/", outputPrefix, "-OT-goterms-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
## Annotation accessions for different interproscan databases ##
# Pull out annotations into separate data frame
ot_only_acc <- data.frame(matrix(ncol = ncol(annot_db), nrow = 0))
for (i in ot_only) {
colnames(ot_only_acc) <- colnames(annot_db)
t <- paste(i, ".", sep="")
s <- subset(annot_db, grepl(t, annot_db$protein_id, fixed=TRUE))
if(nrow(s)==0)
s <- data.frame("protein_id"=i, "GO"="None", "IPR"="None",
"SignalP_EUK"="None", "Pfam"="None", stringsAsFactors = FALSE)
ot_only_acc <- rbind(ot_only_acc, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(ot_only_acc)>0) {
write.table(ot_only_acc, paste0("gene_annotations/", outputPrefix, "-OT-accessions-summary.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
## BLASTP annotations ##
# Pull out annotations into separate data frame
ot_only_blastp <- data.frame(matrix(ncol = ncol(blastp), nrow = 0))
colnames(ot_only_blastp) <- colnames(blastp)
for (i in ot_only) {
colnames(ot_only_blastp) <- colnames(blastp)
t <- paste(i, ".", sep="")
s <- subset(blastp, grepl(t, blastp$prot_id, fixed=TRUE))
ot_only_blastp <- rbind(ot_only_blastp, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(ot_only_blastp)>0) {
write.table(ot_only_blastp, paste0("gene_annotations/", outputPrefix, "-OT-blastp-hits.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
nrow(ot_goterm_summary)>0
nrow(ot_goterm_summary)
!is.null(ot_goterm_summary)
ot_goterm_summary
!is.null(nrow(ot_goterm_summary))
### Oral Tentacle Only ###
## Interpro Scan annotations ##
# Pull out annotations into separate data frame
ot_only_annot <- data.frame(matrix(ncol = ncol(annot_edit), nrow = 0))
for (i in ot_only) {
colnames(ot_only_annot) <- colnames(annot_edit)
t <- paste(i, ".", sep="")
s <- subset(annot_edit, grepl(t, annot_edit$prot_id, fixed=TRUE))
ot_only_annot <- rbind(ot_only_annot, s)
}
# Sort annotations by number of times present
ot_label_summary <- sort(summary(ot_only_annot$label), decreasing=TRUE)
ot_label_summary <- ot_label_summary[!ot_label_summary %in% 0]
# Write out list of annotations to files
if (nrow(ot_only_annot)>0) {
write.table(ot_only_annot, paste0("gene_annotations/", outputPrefix, "-OT-only-annotations.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
if (!is.null(nrow(ot_label_summary))) {
write.table(ot_label_summary, paste0("gene_annotations/", outputPrefix, "-OT-label-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
# Sort go terms by number of times present
ot_goterm_summary <- sort(summary(ot_only_annot$go_term), decreasing=TRUE)
ot_goterm_summary <- ot_goterm_summary[!ot_goterm_summary %in% 0]
# Write out list of go terms to file
if (!is.null(nrow(ot_goterm_summary))) {
write.table(ot_goterm_summary, paste0("gene_annotations/", outputPrefix, "-OT-goterms-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
## Annotation accessions for different interproscan databases ##
# Pull out annotations into separate data frame
ot_only_acc <- data.frame(matrix(ncol = ncol(annot_db), nrow = 0))
for (i in ot_only) {
colnames(ot_only_acc) <- colnames(annot_db)
t <- paste(i, ".", sep="")
s <- subset(annot_db, grepl(t, annot_db$protein_id, fixed=TRUE))
if(nrow(s)==0)
s <- data.frame("protein_id"=i, "GO"="None", "IPR"="None",
"SignalP_EUK"="None", "Pfam"="None", stringsAsFactors = FALSE)
ot_only_acc <- rbind(ot_only_acc, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(ot_only_acc)>0) {
write.table(ot_only_acc, paste0("gene_annotations/", outputPrefix, "-OT-accessions-summary.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
## BLASTP annotations ##
# Pull out annotations into separate data frame
ot_only_blastp <- data.frame(matrix(ncol = ncol(blastp), nrow = 0))
colnames(ot_only_blastp) <- colnames(blastp)
for (i in ot_only) {
colnames(ot_only_blastp) <- colnames(blastp)
t <- paste(i, ".", sep="")
s <- subset(blastp, grepl(t, blastp$prot_id, fixed=TRUE))
ot_only_blastp <- rbind(ot_only_blastp, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(ot_only_blastp)>0) {
write.table(ot_only_blastp, paste0("gene_annotations/", outputPrefix, "-OT-blastp-hits.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
### Rhinophore Only ###
## Interpro Scan annotations ##
# Pull out annotations into separate data frame
rh_only_annot <- data.frame(matrix(ncol = ncol(annot_edit), nrow = 0))
for (i in rh_only) {
colnames(rh_only_annot) <- colnames(annot_edit)
t <- paste(i, ".", sep="")
s <- subset(annot_edit, grepl(t, annot_edit$prot_id, fixed=TRUE))
rh_only_annot <- rbind(rh_only_annot, s)
}
# Sort annotations by number of times present
rh_label_summary <- sort(summary(rh_only_annot$label), decreasing=TRUE)
rh_label_summary <- rh_label_summary[!rh_label_summary %in% 0]
# Write out list of annotations to files
if (nrow(rh_only_annot)>0) {
write.table(rh_only_annot, paste0("gene_annotations/", outputPrefix, "-RH-only-annotations.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
if (!is.null(nrow(rh_label_summary))) {
write.table(rh_label_summary, paste0("gene_annotations/", outputPrefix, "-RH-label-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
# Sort go terms by number of times present
rh_goterm_summary <- sort(summary(rh_only_annot$go_term), decreasing=TRUE)
rh_goterm_summary <- rh_goterm_summary[!rh_goterm_summary %in% 0]
# Write out list of go terms to file
if (!is.null(nrow(rh_goterm_summary))) {
write.table(rh_goterm_summary, paste0("gene_annotations/", outputPrefix, "-RH-goterms-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
## Annotation accessions for different interproscan databases ##
# Pull out annotations into separate data frame
rh_only_acc <- data.frame(matrix(ncol = ncol(annot_db), nrow = 0))
for (i in rh_only) {
colnames(rh_only_acc) <- colnames(annot_db)
t <- paste(i, ".", sep="")
s <- subset(annot_db, grepl(t, annot_db$protein_id, fixed=TRUE))
if(nrow(s)==0)
s <- data.frame("protein_id"=i, "GO"="None", "IPR"="None",
"SignalP_EUK"="None", "Pfam"="None", stringsAsFactors = FALSE)
rh_only_acc <- rbind(rh_only_acc, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(rh_only_acc)>0) {
write.table(rh_only_acc, paste0("gene_annotations/", outputPrefix, "-RH-accessions-summary.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
## BLASTP annotations ##
# Pull out annotations into separate data frame
rh_only_blastp <- data.frame(matrix(ncol = ncol(blastp), nrow = 0))
colnames(rh_only_blastp) <- colnames(blastp)
for (i in rh_only) {
colnames(rh_only_blastp) <- colnames(blastp)
t <- paste(i, ".", sep="")
s <- subset(blastp, grepl(t, blastp$prot_id, fixed=TRUE))
rh_only_blastp <- rbind(rh_only_blastp, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(rh_only_blastp)>0) {
write.table(rh_only_blastp, paste0("gene_annotations/", outputPrefix, "-RH-blastp-hits.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
### Brain Only ###
## Interpro Scan annotations ##
# Pull out annotations into separate data frame
br_only_annot <- data.frame(matrix(ncol = ncol(annot_edit), nrow = 0))
for (i in br_only) {
colnames(br_only_annot) <- colnames(annot_edit)
t <- paste(i, ".", sep="")
s <- subset(annot_edit, grepl(t, annot_edit$prot_id, fixed=TRUE))
br_only_annot <- rbind(br_only_annot, s)
}
# Sort annotations by number of times present
br_label_summary <- sort(summary(br_only_annot$label), decreasing=TRUE)
br_label_summary <- br_label_summary[!br_label_summary %in% 0]
# Write out list of annotations to files
if (nrow(br_only_annot)>0) {
write.table(br_only_annot, paste0("gene_annotations/", outputPrefix, "-BR-only-annotations.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
if (!is.null(nrow(br_label_summary))) {
write.table(br_label_summary, paste0("gene_annotations/", outputPrefix, "-BR-label-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
# Sort go terms by number of times present
br_goterm_summary <- sort(summary(br_only_annot$go_term), decreasing=TRUE)
br_goterm_summary <- br_goterm_summary[!br_goterm_summary %in% 0]
# Write out list of go terms to file
if (!is.null(nrow(br_goterm_summary))) {
write.table(br_goterm_summary, paste0("gene_annotations/", outputPrefix, "-BR-goterms-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
## Annotation accessions for different interproscan databases ##
# Pull out annotations into separate data frame
br_only_acc <- data.frame(matrix(ncol = ncol(annot_db), nrow = 0))
for (i in br_only) {
colnames(br_only_acc) <- colnames(annot_db)
t <- paste(i, ".", sep="")
s <- subset(annot_db, grepl(t, annot_db$protein_id, fixed=TRUE))
if(nrow(s)==0)
s <- data.frame("protein_id"=i, "GO"="None", "IPR"="None",
"SignalP_EUK"="None", "Pfam"="None", stringsAsFactors = FALSE)
br_only_acc <- rbind(br_only_acc, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(br_only_acc)>0) {
write.table(br_only_acc, paste0("gene_annotations/", outputPrefix, "-BR-accessions-summary.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
## BLASTP annotations ##
# Pull out annotations into separate data frame
br_only_blastp <- data.frame(matrix(ncol = ncol(blastp), nrow = 0))
colnames(br_only_blastp) <- colnames(blastp)
for (i in br_only) {
colnames(br_only_blastp) <- colnames(blastp)
t <- paste(i, ".", sep="")
s <- subset(blastp, grepl(t, blastp$prot_id, fixed=TRUE))
br_only_blastp <- rbind(br_only_blastp, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(br_only_blastp)>0) {
write.table(br_only_blastp, paste0("gene_annotations/", outputPrefix, "-BR-blastp-hits.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
### Foot Only ###
## Interpro Scan annotations ##
# Pull out annotations into separate data frame
fo_only_annot <- data.frame(matrix(ncol = ncol(annot_edit), nrow = 0))
for (i in fo_only) {
colnames(fo_only_annot) <- colnames(annot_edit)
t <- paste(i, ".", sep="")
s <- subset(annot_edit, grepl(t, annot_edit$prot_id, fixed=TRUE))
fo_only_annot <- rbind(fo_only_annot, s)
}
# Sort annotations by number of times present
fo_label_summary <- sort(summary(fo_only_annot$label), decreasing=TRUE)
fo_label_summary <- fo_label_summary[!fo_label_summary %in% 0]
# Write out list of annotations to files
if (nrow(fo_only_annot)>0) {
write.table(fo_only_annot, paste0("gene_annotations/", outputPrefix, "-FO-only-annotations.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
if (!is.null(nrow(fo_label_summary))) {
write.table(fo_label_summary, paste0("gene_annotations/", outputPrefix, "-FO-label-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
# Sort go terms by number of times present
fo_goterm_summary <- sort(summary(fo_only_annot$go_term), decreasing=TRUE)
fo_goterm_summary <- fo_goterm_summary[!fo_goterm_summary %in% 0]
# Write out list of go terms to file
if (!is.null(nrow(fo_goterm_summary))) {
write.table(fo_goterm_summary, paste0("gene_annotations/", outputPrefix, "-FO-goterms-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
## Annotation accessions for different interproscan databases ##
# Pull out annotations into separate data frame
fo_only_acc <- data.frame(matrix(ncol = ncol(annot_db), nrow = 0))
for (i in fo_only) {
colnames(fo_only_acc) <- colnames(annot_db)
t <- paste(i, ".", sep="")
s <- subset(annot_db, grepl(t, annot_db$protein_id, fixed=TRUE))
if(nrow(s)==0)
s <- data.frame("protein_id"=i, "GO"="None", "IPR"="None",
"SignalP_EUK"="None", "Pfam"="None", stringsAsFactors = FALSE)
fo_only_acc <- rbind(fo_only_acc, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(fo_only_acc)>0) {
write.table(fo_only_acc, paste0("gene_annotations/", outputPrefix, "-FO-accessions-summary.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
## BLASTP annotations ##
# Pull out annotations into separate data frame
fo_only_blastp <- data.frame(matrix(ncol = ncol(blastp), nrow = 0))
colnames(fo_only_blastp) <- colnames(blastp)
for (i in fo_only) {
colnames(fo_only_blastp) <- colnames(blastp)
t <- paste(i, ".", sep="")
s <- subset(blastp, grepl(t, blastp$prot_id, fixed=TRUE))
fo_only_blastp <- rbind(fo_only_blastp, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(fo_only_blastp)>0) {
write.table(fo_only_blastp, paste0("gene_annotations/", outputPrefix, "-FO-blastp-hits.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
### Tail Only ###
## Interpro Scan annotations ##
# Pull out annotations into separate data frame
ta_only_annot <- data.frame(matrix(ncol = ncol(annot_edit), nrow = 0))
for (i in ta_only) {
colnames(ta_only_annot) <- colnames(annot_edit)
t <- paste(i, ".", sep="")
s <- subset(annot_edit, grepl(t, annot_edit$prot_id, fixed=TRUE))
ta_only_annot <- rbind(ta_only_annot, s)
}
# Sort annotations by number of times present
ta_label_summary <- sort(summary(ta_only_annot$label), decreasing=TRUE)
ta_label_summary <- ta_label_summary[!ta_label_summary %in% 0]
# Write out list of annotations to files
if (nrow(ta_only_annot)>0) {
write.table(ta_only_annot, paste0("gene_annotations/", outputPrefix, "-TA-only-annotations.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
if (!is.null(nrow(ta_label_summary))) {
write.table(ta_label_summary, paste0("gene_annotations/", outputPrefix, "-TA-label-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
# Sort go terms by number of times present
ta_goterm_summary <- sort(summary(ta_only_annot$go_term), decreasing=TRUE)
ta_goterm_summary <- ta_goterm_summary[!ta_goterm_summary %in% 0]
# Write out list of go terms to file
if (!is.null(nrow(ta_goterm_summary))) {
write.table(ta_goterm_summary, paste0("gene_annotations/", outputPrefix, "-TA-goterms-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
## Annotation accessions for different interproscan databases ##
# Pull out annotations into separate data frame
ta_only_acc <- data.frame(matrix(ncol = ncol(annot_db), nrow = 0))
for (i in ta_only) {
colnames(ta_only_acc) <- colnames(annot_db)
t <- paste(i, ".", sep="")
s <- subset(annot_db, grepl(t, annot_db$protein_id, fixed=TRUE))
if(nrow(s)==0)
s <- data.frame("protein_id"=i, "GO"="None", "IPR"="None",
"SignalP_EUK"="None", "Pfam"="None", stringsAsFactors = FALSE)
ta_only_acc <- rbind(ta_only_acc, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(ta_only_acc)>0) {
write.table(ta_only_acc, paste0("gene_annotations/", outputPrefix, "-TA-accessions-summary.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
## BLASTP annotations ##
# Pull out annotations into separate data frame
ta_only_blastp <- data.frame(matrix(ncol = ncol(blastp), nrow = 0))
colnames(ta_only_blastp) <- colnames(blastp)
for (i in ta_only) {
colnames(ta_only_blastp) <- colnames(blastp)
t <- paste(i, ".", sep="")
s <- subset(blastp, grepl(t, blastp$prot_id, fixed=TRUE))
ta_only_blastp <- rbind(ta_only_blastp, s)
}
# Write out annotation summary for tissue-specific genes to file
if (nrow(ta_only_blastp)>0) {
write.table(ta_only_blastp, paste0("gene_annotations/", outputPrefix, "-TA-blastp-hits.txt"), quote=FALSE, row.names = FALSE, sep="\t")
}
br_goterm_summary
br_goterm_summary
nrow(br_goterm_summary)
nrow(as.table(br_goterm_summary))
nrow(as.table(br_goterm_summary))>1
br_label_summary
is.null(nrow(as.table(ot_label_summary)))
!is.null(nrow(as.table(ot_label_summary)))
!is.null(nrow(as.table(br_label_summary)))
!is.null(nrow(ta_goterm_summary))
!is.null(nrow(br_goterm_summary))
br_goterm_summary
!is.null(nrow(as.table(br_goterm_summary)))
!is.null(nrow(as.table(br_goterm_summary)))
if (!is.null(nrow(as.table(br_label_summary))) {
write.table(br_label_summary, paste0("gene_annotations/", outputPrefix, "-BR-label-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
(!is.null(nrow(as.table(br_label_summary)))
if (!is.null(nrow(as.table(br_label_summary))) {
write.table(br_label_summary, paste0("gene_annotations/", outputPrefix, "-BR-label-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
if (!is.null(nrow(as.table(br_label_summary)))){
write.table(br_label_summary, paste0("gene_annotations/", outputPrefix, "-BR-label-summary.txt"), quote=FALSE, col.names = FALSE, sep="\t")
}
